/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ssanalytics.snapshotplugin.ui.exportReport.view;

import javax.swing.JPanel;
import org.ssanalytics.snapshotplugin.domainModel.crawlerData.contract.snapshotInfo.ISnapshotInfo;
import org.ssanalytics.snapshotplugin.io.exportReport.spi.ReportContent;
import org.ssanalytics.snapshotplugin.io.exportReport.spi.ExportContentUI;

/**
 *
 * @author christian
 */
public class ExportFrontEnd extends javax.swing.JPanel {

    private ExportContentUI exportUI;
    private ReportContent currentExport;
    private boolean hasSnapshot;
    private ISnapshotInfo snapshot = null;

    /**
     * Creates new form ExportFrontEnd
     */
    public ExportFrontEnd(ExportContentUI exportUI) {
        initComponents();
        initUI(exportUI);
    }

    public ExportFrontEnd(ExportContentUI exportUI, ISnapshotInfo snapshot) {
        this.snapshot = snapshot;
        initComponents();
        initUI(exportUI);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        lblExporter = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        chkbxInclude = new javax.swing.JCheckBox();
        panelProperties = new javax.swing.JPanel();

        setName(""); // NOI18N
        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("toolBar"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblExporter, org.openide.util.NbBundle.getMessage(ExportFrontEnd.class, "ExportFrontEnd.lblExporter.text")); // NOI18N
        lblExporter.setName("lblExporter"); // NOI18N
        jToolBar1.add(lblExporter);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        chkbxInclude.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(chkbxInclude, org.openide.util.NbBundle.getMessage(ExportFrontEnd.class, "ExportFrontEnd.chkbxInclude.text")); // NOI18N
        chkbxInclude.setFocusable(false);
        chkbxInclude.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        chkbxInclude.setName("chkbxInclude"); // NOI18N
        chkbxInclude.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        chkbxInclude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbxIncludeActionPerformed(evt);
            }
        });
        jToolBar1.add(chkbxInclude);

        add(jToolBar1, java.awt.BorderLayout.NORTH);

        panelProperties.setName("panelProperties"); // NOI18N
        panelProperties.setLayout(new java.awt.BorderLayout());
        add(panelProperties, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void chkbxIncludeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbxIncludeActionPerformed
        panelProperties.setEnabled(chkbxInclude.isSelected());
    }//GEN-LAST:event_chkbxIncludeActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkbxInclude;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblExporter;
    private javax.swing.JPanel panelProperties;
    // End of variables declaration//GEN-END:variables

    private void initUI(ExportContentUI ui) {
        exportUI = ui;
        lblExporter.setText(ui.getDisplayName());
        panelProperties.add(ui.getSettingsPanel(snapshot), java.awt.BorderLayout.CENTER);
    }

    public boolean isActiveExport() {
        return chkbxInclude.isSelected();
    }
//    
//    public void setHasSnapshot(boolean hasSnapshot) {
//        this.hasSnapshot = hasSnapshot;
//    }
//    
//    public boolean hasSnapshotProperty() {
//        return hasSnapshot;
//    }
}
